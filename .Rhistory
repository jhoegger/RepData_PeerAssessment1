library(dplyr)
.libPath("C:/R/win-library")
?.libPath
?.LibPath
?libPath
.libpath
.libPath
libPath
.libPaths("C:/R/win-library")
.libPaths()
.libPaths("C:/R/win-library/3.1")
.libPaths()
library(dplyr)
install.packages("dplyr")
library(dplyr)
setwd("C:/Projects/Coursera-DS/4.Explore/Project")
#Set the filename for the data file
filename <- "household_power_consumption.txt"
data <-read.csv(filename, sep = ";", header = TRUE, nrows=100000)
DT <- tbl_df(data)
##change the date to by of type Date
DT$Date <-  as.Date(DT$Date, "%d/%m/%Y")
##filter to just 2/1/2007 & 2/2/2007
DTFeb <-filter(DT, Date == as.Date("2/1/2007", "%m/%d/%Y") | Date == as.Date("2/2/2007", "%m/%d/%Y"))
DTFeb$Global_active_power <- as(DTFeb$Global_active_power, "character")
##change DTFeb$Global_active_power to be numeric
DTFeb$Global_active_power <- as(DTFeb$Global_active_power, "numeric")
##plot Hist
hist(DTFeb$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks=15,  xlim = c(0, 6))
dev.copy(png, file="plot1.png")
dev.off()
setwd("C:/Projects/Coursera-DS/4.Explore/Week1/holaiadeu")
#Data is read taking into account decimal separator, column classes and NA type
#Dataset is assumed to be present in the working directory
data = read.csv2("household_power_consumption.txt", dec=".",na.strings="?",
colClasses=c(rep("character",2), rep("numeric",7)))
#data is filtered to take into account only the desired dates
data = data[data$Date %in% c("1/2/2007", "2/2/2007"),]
#dates and types are converted from 2 character columns to 1 single column of
#the appropriate date/time type
datesTime = strptime(paste(data$Date,data$Time), format="%d/%m/%Y %H:%M:%S")
#Date and Time columns are replaced by the new Date_Time column
data = cbind(datesTime,data[,3:9])
names(data)[1]="Date_Time"
#A .png file with the desired dimensions is opened
png(file="plot1.png", width=480, height=480, units="px")
#The desired histogram is plotted
with(data,hist(Global_active_power, col="red", main="Global Active Power", ylim=range(0,1200),xlab="Global Active Power (kilowatts)"))
#.png file is closed
dev.off()
##    ------------  Plot 1 ---------  ##
library(dplyr)
setwd("C:/Projects/Coursera-DS/4.Explore/Project")
#Set the filename for the data file
filename <- "household_power_consumption.txt"
##only read in the first 100,000 rows of data
data <-read.csv(filename, sep = ";", header = TRUE, nrows=100000)
DT <- tbl_df(data)
##change the date to by of type Date
DT$Date <-  as.Date(DT$Date, "%d/%m/%Y")
##filter to just 2/1/2007 & 2/2/2007
DTFeb <-filter(DT, Date == as.Date("2/1/2007", "%m/%d/%Y") | Date == as.Date("2/2/2007", "%m/%d/%Y"))
DTFeb$Global_active_power <- as(DTFeb$Global_active_power, "character")
##change DTFeb$Global_active_power to be numeric
DTFeb$Global_active_power <- as(DTFeb$Global_active_power, "numeric")
#Create a.png file and set the dimensions
png(file="plot1.png", width=480, height=480, units="px")
#plot the histogram
with(data,hist(Global_active_power, col="red", main="Global Active Power", ylim=range(0,1200),xlab="Global Active Power (kilowatts)"))
#close the .png file
dev.off()
#Create a.png file and set the dimensions
png(file="plot1.png", width=480, height=480, units="px")
#plot the histogram
with(DTFeb,hist(Global_active_power, col="red", main="Global Active Power", ylim=range(0,1200),xlab="Global Active Power (kilowatts)"))
#close the .png file
dev.off()
library(utils)
library(dplyr)
setwd("C:/Projects/Coursera-DS/4.Explore/Project")
if (!file.exists("PowerData.zip")) {
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile="PowerData.zip")
}
## Plot2 ##
library(utils)
library(dplyr)
setwd("C:/Projects/Coursera-DS/4.Explore/Project")
if (!file.exists("PowerData.zip")) {
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile="PowerData.zip")
}
filename <- "household_power_consumption.txt"
##only read in the first 100,000 rows of data
data <- read.table(unz("PowerData.zip", filename), header=T, quote="\"", sep=";", na.strings="?", nrows=100000)
## Convert the date to a date object
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
## Only get Feb1 and Feb2 data
data <- data[data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"), ]
## Create a new Date/Time combined column
data$DateTime <- strptime(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
## Create plot and save a png file
#Create a.png file and set the dimensions
png(file="plot2.png", width=480, height=480, units="px")
#The desired plot is plotted
with(data,plot(DateTime, Global_active_power, col="black", type="l", xlab="", ylab="Global Active Power (kilowatts)"))
#close the .png file
dev.off()
## Plot2 ##
library(utils)
library(dplyr)
setwd("C:/Projects/Coursera-DS/4.Explore/Project")
if (!file.exists("PowerData.zip")) {
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile="PowerData.zip")
}
filename <- "household_power_consumption.txt"
##only read in the first 100,000 rows of data
data <- read.table(unz("PowerData.zip", filename), header=T, quote="\"", sep=";", na.strings="?", nrows=100000)
## Convert the date to a date object
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
## Only get Feb1 and Feb2 data
data <- data[data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"), ]
## Create a new Date/Time combined column
data$DateTime <- strptime(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
## Create plot and save a png file
#Create a.png file and set the dimensions
png(file="plot2.png", width=480, height=480, units="px")
#The desired plot is plotted
with(data,plot(DateTime, Global_active_power, col="black", type="l", xlab="", ylab="Global Active Power (kilowatts)"))
#close the .png file
dev.off()
##    ------------  Plot 3 ---------  ##
#setwd("C:/Projects/Coursera-DS/4.Explore/Project")
library(utils)
library(dplyr)
if (!file.exists("PowerData.zip")) {
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile="PowerData.zip")
}
#Set the filename for the data file
filename <- "household_power_consumption.txt"
##only read in the first 100,000 rows of data
data <- read.table(unz("PowerData.zip", filename), header=T, quote="\"", sep=";", na.strings="?", nrows=100000)
## Convert the date to a date object
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
## Only get Feb1 and Feb2 data
data <- data[data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"), ]
## Create a new Date/Time combined column
data$DateTime <- strptime(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
## Create plot and save a png file
plotFile <- "C:/Projects/Coursera-DS/4.Explore/Project/plot3.png"
png(filename = plotFile, width = 480, height = 480, units = "px", pointsize = 12,  bg = "white", res = NA, family = "", restoreConsole = TRUE)
plot (y=data$Sub_metering_1, x=data$DateTime, ylab="Energy sub metering", xlab="",type="l", col="black")
lines(y=data$Sub_metering_2, x=data$DateTime, col="red", type="l")
lines(y=data$Sub_metering_3, x=data$DateTime, col="blue", type="l")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1))
dev.off()
?legend
png(file="plot3.png", width=480, height=480, units="px")
#The desired plot is plotted
with(data, {plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")})
#The legend is plotted
legend("topright", col=c("black", "red", "blue"), bty=n, legend=names(data)[6:8])
legend("topright", col=c("black", "red", "blue"), bty="n", legend=names(data)[6:8])
#close the .png file
dev.off()
legend("topright", col=c("black", "red", "blue"), bty=n,
legend=names(data)[6:8])
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1))
with(data, {plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")})
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1))
dev.off()
#A .png file with the desired dimensions is opened
png(file="plot3.png", width=480, height=480, units="px")
#The desired plot is plotted
with(data, {plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")})
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1))
dev.off()
hist(data$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)", breaks=15,  xlim = c(0, 6))
##    ------------  Plot 4 ---------  ##
library(utils)
library(dplyr)
if (!file.exists("PowerData.zip")) {
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile="PowerData.zip")
}
#Set the filename for the data file
filename <- "household_power_consumption.txt"
##only read in the first 100,000 rows of data
data <- read.table(unz("PowerData.zip", filename), header=T, quote="\"", sep=";", na.strings="?", nrows=100000)
## Convert the date to a date object
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
## Only get Feb1 and Feb2 data
data <- data[data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"), ]
## Create a new Date/Time combined column
data$DateTime <- strptime(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
#Create a.png file and set the dimensions
png(file="plot1.png", width=480, height=480, units="px")
#make a 2 by 2 grid for the plots
par(mfrow = c(2,2))
##plot 1
with(data,plot(Date_Time, Global_active_power, col="black", type="l", xlab="",
ylab="Global Active Power"))
#plot 2
with(data, plot(Date_Time, Voltage, col="black", type="l", xlab="datetime",
ylab="Voltage")
##plot 3
with(data, plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")})
#Add Legend to the plot
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"))
##plot 4
with(data, plot(y=data$Global_reactive_power, x=data$DateTime, ylab="Global_reactive_Power", xlab="datetime",type="l"))
dev.off()
with(data,plot(Date_Time, Global_active_power, col="black", type="l", xlab="",
ylab="Global Active Power"))
##plot 1
with(data,plot(DateTime, Global_active_power, col="black", type="l", xlab="",
ylab="Global Active Power"))
#plot 2
with(data, plot(DateTime, Voltage, col="black", type="l", xlab="datetime",
ylab="Voltage")
##plot 3
with(data, plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")})
#Add Legend to the plot
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"))
##plot 4
with(data, plot(y=Global_reactive_power, x=DateTime, ylab="Global_reactive_Power", xlab="datetime",type="l"))
par(mfrow = c(2,2))
##plot 1
with(data,plot(DateTime, Global_active_power, col="black", type="l", xlab="",
ylab="Global Active Power"))
#plot 2
with(data, plot(DateTime, Voltage, col="black", type="l", xlab="datetime",
ylab="Voltage")
##plot 3
with(data, plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")})
#Add Legend to the plot
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"))
##plot 4
with(data, plot(y=Global_reactive_power, x=DateTime, ylab="Global_reactive_Power", xlab="datetime",type="l"))
png(file="plot4.png", width=480, height=480, units="px")
#make a 2 by 2 grid for the plots
par(mfrow = c(2,2))
#The desired plots are plotted
with(data, {plot(DateTime, Global_active_power, col="black", type="l", xlab="",
ylab="Global Active Power")
plot(DateTime, Voltage, col="black", type="l", xlab="datetime",
ylab="Voltage")
plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")
legend("topright", col=c("black", "red", "blue"), lty=1, bty="n", cex=0.9,
legend=names(data)[6:8])
plot(DateTime, Global_reactive_power, col="black", type="l", xlab="datetime")})
dev.off()
#Create a.png file and set the dimensions
png(file="plot4.png", width=480, height=480, units="px")
#make a 2 by 2 grid for the plots
par(mfrow = c(2,2))
#The desired plots are plotted
with(data, {plot(DateTime, Global_active_power, col="black", type="l", xlab="",
ylab="Global Active Power")
plot(DateTime, Voltage, col="black", type="l", xlab="datetime",
ylab="Voltage")
plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")
legend("topright", col=c("black", "red", "blue"), lty=1, bty="n", cex=0.9,
legend=names(data)[5:7])
plot(DateTime, Global_reactive_power, col="black", type="l", xlab="datetime")})
dev.off()
#Create a.png file and set the dimensions
png(file="plot4.png", width=480, height=480, units="px")
#make a 2 by 2 grid for the plots
par(mfrow = c(2,2))
#The desired plots are plotted
with(data, {plot(DateTime, Global_active_power, col="black", type="l", xlab="",
ylab="Global Active Power")
plot(DateTime, Voltage, col="black", type="l", xlab="datetime",
ylab="Voltage")
plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")
legend("topright", col=c("black", "red", "blue"), lty=1, bty="n", cex=0.9,
legend=names(data)[7:9])
plot(DateTime, Global_reactive_power, col="black", type="l", xlab="datetime")})
dev.off()
##    ------------  Plot 4 ---------  ##
library(utils)
library(dplyr)
if (!file.exists("PowerData.zip")) {
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile="PowerData.zip")
}
#Set the filename for the data file
filename <- "household_power_consumption.txt"
##only read in the first 100,000 rows of data
data <- read.table(unz("PowerData.zip", filename), header=T, quote="\"", sep=";", na.strings="?", nrows=100000)
## Convert the date to a date object
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
## Only get Feb1 and Feb2 data
data <- data[data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"), ]
## Create a new Date/Time combined column
data$DateTime <- strptime(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
#Create a.png file and set the dimensions
png(file="plot4.png", width=480, height=480, units="px")
#make a 2 by 2 grid for the plots
par(mfrow = c(2,2))
#The desired plots are plotted
with(data, {plot(DateTime, Global_active_power, col="black", type="l", xlab="",
ylab="Global Active Power")
plot(DateTime, Voltage, col="black", type="l", xlab="datetime",
ylab="Voltage")
plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")
legend("topright", col=c("black", "red", "blue"), lty=1, bty="n", cex=0.9,
legend=names(data)[7:9])
plot(DateTime, Global_reactive_power, col="black", type="l", xlab="datetime")})
#close the .png file
dev.off()
##    ------------  Plot 3 ---------  ##
library(utils)
library(dplyr)
if (!file.exists("PowerData.zip")) {
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile="PowerData.zip")
}
#Set the filename for the data file
filename <- "household_power_consumption.txt"
##only read in the first 100,000 rows of data
data <- read.table(unz("PowerData.zip", filename), header=T, quote="\"", sep=";", na.strings="?", nrows=100000)
## Convert the date to a date object
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
## Only get Feb1 and Feb2 data
data <- data[data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"), ]
## Create a new Date/Time combined column
data$DateTime <- strptime(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
## Create plot and save a png file
#A .png file with the desired dimensions is opened
png(file="plot3.png", width=480, height=480, units="px")
#The desired plot is plotted
with(data, {plot(DateTime, Sub_metering_1, col="black", type="l", xlab="",
ylab="Energy sub metering")
lines(DateTime, Sub_metering_2, col="red")
lines(DateTime, Sub_metering_3, col="blue")})
#Add Legend to the plot
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"), lty=c(1,1))
#close the .png file
dev.off()
##    ------------  Plot 2 ---------  ##
library(utils)
library(dplyr)
if (!file.exists("PowerData.zip")) {
download.file(url="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",
destfile="PowerData.zip")
}
#Set the filename for the data file
filename <- "household_power_consumption.txt"
##only read in the first 100,000 rows of data
data <- read.table(unz("PowerData.zip", filename), header=T, quote="\"", sep=";", na.strings="?", nrows=100000)
## Convert the date to a date object
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
## Only get Feb1 and Feb2 data
data <- data[data$Date >= as.Date("2007-02-01") & data$Date <= as.Date("2007-02-02"), ]
## Create a new Date/Time combined column
data$DateTime <- strptime(paste(data$Date, data$Time), format="%Y-%m-%d %H:%M:%S")
## Create plot and save a png file
#Create a.png file and set the dimensions
png(file="plot2.png", width=480, height=480, units="px")
#create the plot
with(data,plot(DateTime, Global_active_power, col="black", type="l", xlab="", ylab="Global Active Power (kilowatts)"))
#close the .png file
dev.off()
##    ------------  Plot 1 ---------  ##
library(dplyr)
#Set the filename for the data file
filename <- "household_power_consumption.txt"
##only read in the first 100,000 rows of data
data <-read.csv(filename, sep = ";", header = TRUE, nrows=100000)
DT <- tbl_df(data)
##change the date to by of type Date
DT$Date <-  as.Date(DT$Date, "%d/%m/%Y")
##filter to just 2/1/2007 & 2/2/2007
DTFeb <-filter(DT, Date == as.Date("2/1/2007", "%m/%d/%Y") | Date == as.Date("2/2/2007", "%m/%d/%Y"))
DTFeb$Global_active_power <- as(DTFeb$Global_active_power, "character")
##change DTFeb$Global_active_power to be numeric
DTFeb$Global_active_power <- as(DTFeb$Global_active_power, "numeric")
#Create a.png file and set the dimensions
png(file="plot1.png", width=480, height=480, units="px")
#plot the histogram
with(DTFeb,hist(Global_active_power, col="red", main="Global Active Power", ylim=range(0,1200),xlab="Global Active Power (kilowatts)"))
#close the .png file
dev.off()
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
rownames(temp) <- c("x", "p")
sum(x^2*p) - sum(x * p)^2
x
p
y <- c(1,2,2,3,3,3,4,4,4,4)
mean(y)
setwd("C:/GitHub/RepData_PeerAssessment1")
